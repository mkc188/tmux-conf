# pane navigation
bind h select-pane -L
bind C-h select-pane -L
bind j select-pane -D
bind C-j select-pane -D
bind k select-pane -U
bind C-k select-pane -U
bind l select-pane -R
bind C-l select-pane -R

# move window
bind -r < swap-window -t -1
bind -r > swap-window -t +1

# resize pane
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# split window
bind s split-window -v
bind v split-window -h

# only tmux 1.9 has the -c option
if-shell "tmux -V | grep 1.9" \
    'bind s split-window -v -c "#{pane_current_path}"; bind v split-window -h -c "#{pane_current_path}"; bind c new-window -c "#{pane_current_path}"'

# vi-style controls for copy mode
set-window-option -g mode-keys vi
set-window-option -g status-keys emacs

# change prefix key
unbind C-b
set-option -g prefix C-q
bind q send-keys C-q
bind C-q last-window

# set first window to 1 instead of 0
set-option -g base-index 1
set-window-option -g pane-base-index 1

# correct term for 256 colours
set-option -g default-terminal "screen-256color"

# sync panes
bind C-s set-window-option synchronize-panes

# enable utf8
set-option -g utf8 on

# address vim mode switching delay
set-option -s escape-time 0

# increase scrollback buffer size
set-option -g history-limit 50000

# enable mouse features for terminals that support it
set-window-option -g mode-mouse on
set-option -g mouse-resize-pane on
set-option -g mouse-select-pane on
set-option -g mouse-select-window on

# OSX Clipboard support
if-shell 'test "$(uname -s)" = Darwin' 'set-option -g default-command "reattach-to-user-namespace -l $SHELL"'
bind C-v run "tmux set-buffer $(reattach-to-user-namespace pbpaste); tmux paste-buffer"
bind C-c run "tmux save-buffer - | reattach-to-user-namespace pbcopy"

# Linux clipboard support
bind C-p run "tmux set-buffer \"$(xclip -o -selection clipboard)\"; tmux paste-buffer"
bind C-y run "tmux save-buffer - | xclip -i -selection clipboard > /dev/null"

# don't output gibberish to the terminal
set-option -s set-clipboard off

# activity monitoring
set-window-option -g monitor-activity on
set-option -g visual-activity on

# automatic naming of windows
set-window-option -g allow-rename off

# This tmux statusbar config was created by tmuxline.vim
set -g status-bg "colour10"
set -g message-command-fg "colour14"
set -g status-justify "left"
set -g status-left-length "100"
set -g status "on"
set -g pane-active-border-fg "colour10"
set -g message-bg "colour10"
set -g status-right-length "100"
set -g status-right-attr "none"
set -g message-fg "colour14"
set -g message-command-bg "colour10"
set -g status-attr "none"
set -g status-utf8 "on"
set -g pane-border-fg "colour10"
set -g status-left-attr "none"
setw -g window-status-fg "colour11"
setw -g window-status-attr "none"
setw -g window-status-activity-bg "colour10"
setw -g window-status-activity-attr "none"
setw -g window-status-activity-fg "colour11"
if-shell "tmux -V | grep 1.9" \
    'setw -g window-status-separator ""'
setw -g window-status-bg "colour10"
set -g status-left "#[fg=colour11,bg=colour10] #S #[fg=colour10,bg=colour10,nobold,nounderscore,noitalics]"
set -g status-right "#[fg=colour10,bg=colour10,nobold,nounderscore,noitalics]#[fg=colour11,bg=colour10] %Y-%m-%d | %H:%M #[fg=colour10,bg=colour10,nobold,nounderscore,noitalics]#[fg=colour11,bg=colour10] #h "
setw -g window-status-format "#[fg=colour11,bg=colour10] #I |#[fg=colour11,bg=colour10] #W "
setw -g window-status-current-format "#[fg=colour10,bg=colour10,nobold,nounderscore,noitalics]#[fg=colour14,bg=colour10] #I |#[fg=colour14,bg=colour10] #W #[fg=colour10,bg=colour10,nobold,nounderscore,noitalics]"

# tmux-plugins
run-shell ~/.tmux/plugins/tmux-logging/logging.tmux
